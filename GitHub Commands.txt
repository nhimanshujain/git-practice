Frequently Used Commands:
git clone "link"
git remote -v
git remote add origin https://github.com/himanshujain171/haiku.git
git remote add upstream "https://github.com/rahulmakhija30/brevis.git"  (upstream = folk + clone)
git remote remove upstream
git status
git add .
git commit -m "Commit Message"
git push origin master
git pull
git pull upstream master
git log
git reset --hard b361e7565d92a622fe66121a6e0856b00bbb2e76
git add . ; git commit -m "Sem6"

git branch -l  (List the branches)
git branch -d localBranchName (Delete local branch)
git push origin --delete remoteBranchName (Delete remote branch)

git diff
---------------------------------------------------------------------------------
merge changes done in master to feature-branch
git checkout feature-branch
git merge master   (Update locally)
git push origin feature-branch

---------------------------------------------------------------------------------
git pull upstream Version-2.0
git checkout Version-2.0
git push origin Version-2.0
git push origin Version-2.0 --force

git checkout -b API-FEATURE Version-2.0
git push -u origin API-FEATURE
git push upstream API-FEATURE

In API-FEATURE
git add .
git commit â€“m "Some commit message"
git checkout Version-2.0		# Switched to branch 'Version-2.0'
git merge API-FEATURE
git push origin Version-2.0
git push upstream Version-2.0

In Version-2.0
git merge -s ours master
git checkout master
git merge Version-2.0

Delete API_FEATURE(In Master)
git branch -d API-FEATURE
git push origin --delete API-FEATURE

git checkout -b feature
git push -u origin feature
---------------------------------------------------------------------------------

git config --list --show-origin => Location of global gitconfig file
(C:/Users/HIMANSHU JAIN/.gitconfig)

git config --list
git config --global user.name "username"
git config --global user.email "email"

We add alias to .gitconfig file (Global)
git config --global alias.co checkout    (checkout = co)

git init -> Initialzation  contain .git folder 
git add test.txt -> staging area
git commit -m "commit msg" -> commit - ctrl S

git log - commits

notepad trail.c // Set default as vs code

notepad .gitignore - Testing files, not relation with project, can be obtained from .c - .out file

*.out - Every file with .out is ignores

git branch name
git checkout version_2
git merge version_2
git stash - Return to previous commit

When checkout locally -> All local file of that branch is seen
---------------------------------------------------------------
To get the size of the files

gci -r|sort -descending -property length | select name, @{Name="Megabytes";Expression={[Math]::round($_.length / 1MB, 2)}}
gci -r|sort -descending -property length | select -first 10 name, @{Name="Megabytes";Expression={[Math]::round($_.length / 1MB, 2)}}
----------------------------------------------------------------
